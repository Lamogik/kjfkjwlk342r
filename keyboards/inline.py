from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
start_key = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile"),
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
        ],
        [
            InlineKeyboardButton(text="üìñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (FAQ)", callback_data="info"),
        ],
        [
            InlineKeyboardButton(text="‚ûï –°–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã", callback_data="work"),
        ],
    ]
)


# –±–∏–ª–¥–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è
def profile_key(is_wallet: bool):
    builder = InlineKeyboardBuilder()
    if is_wallet is True:
        text = "üëõ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ—à–µ–ª–µ–∫"
    else:
        text = "üëõ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫"

    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
    builder.row(
        InlineKeyboardButton(text=text, callback_data="profile_wallet"),
        InlineKeyboardButton(text="üåê –ê–¥—Ä–µ—Å", callback_data="profile_address")
    )

    # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
    builder.row(
        InlineKeyboardButton(text="üí∞ C–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã", callback_data="profile_methode")
    )

    # –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
    builder.row(
        InlineKeyboardButton(text="üí† –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", callback_data="profile_referral")
    )

    # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "‚Äπ –ù–∞–∑–∞–¥"
    builder.row(
        InlineKeyboardButton(text="‚Äπ –ù–∞–∑–∞–¥", callback_data="start")
    )

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä–∞–∑–º–µ—Ç–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    return builder.as_markup()


# –±–∏–ª–¥–µ—Ä –∞–¥–º–∏–Ω–∫–∏
def admin_panel_key(position: int):
    builder = InlineKeyboardBuilder()
    if position == 0:
        text = "‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —á–µ–∫–µ—Ä"
    else:
        text = "–ß–µ–∫–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"
    builder.row(
        InlineKeyboardButton(text=f"{text}", callback_data=f"admin_run_{position}"),
    )

    builder.row(
        InlineKeyboardButton(text=f"üìÖ –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞", callback_data=f"admin_date"),
    )

    builder.row(
        InlineKeyboardButton(text=f"üì• –ü–æ–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", callback_data=f"admin_payin"),
        InlineKeyboardButton(text=f"üì§ –í—ã–ø–ª–∞—Ç–∞", callback_data=f"admin_payout"),
    )

    builder.row(
        InlineKeyboardButton(text=f"üîç –ù–∞–π—Ç–∏ –≤–æ—Ä–∫–µ—Ä–∞", callback_data=f"admin_find"),
    )

    return builder.as_markup()


def payout_key():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="payout_confirm"),
    builder.button(text="–û—Ç–º–µ–Ω–∞", callback_data="adminmenu"),

    builder.adjust(2)
    return builder.as_markup()

def control_worker(userid: int):
    builder = InlineKeyboardBuilder()
    builder.button(text="üåÄ –û–±–Ω—É–ª–∏—Ç—å", callback_data=f"workerzero_{userid}"),
    builder.button(text="üö´ –ó–∞–±–∞–Ω–∏—Ç—å", callback_data=f"workerban_{userid}"),
    builder.button(text="‚öñÔ∏è –†–∞–∑–±–∞–Ω", callback_data=f"workerunban_{userid}"),
    builder.button(text="‚Äπ –ù–∞–∑–∞–¥", callback_data=f"adminmenu"),
    builder.adjust(3)
    return builder.as_markup()

def accept_zero(userid: int, balance: float):
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirmzero_{userid}_{balance}"),
    builder.button(text="–û—Ç–º–µ–Ω–∞", callback_data=f"adminmenu"),
    builder.adjust(2)
    return builder.as_markup()

def accept_ban(userid: int):
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirmban_{userid}"),
    builder.button(text="–û—Ç–º–µ–Ω–∞", callback_data=f"adminmenu"),
    builder.adjust(2)
    return builder.as_markup()

def sub_key():
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url="https://t.me/+CZ6onm92v080ZjU0"),
    builder.adjust(1)
    return builder.as_markup()


def confirm_wallet_key():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–æ–±–∞–≤–∏—Ç—å", callback_data=f"confirm_wallet"),
    builder.button(text="–û—Ç–º–µ–Ω–∞", callback_data=f"profile"),
    builder.adjust(2)
    return builder.as_markup()


def methode_key(choice: int):
    builder = InlineKeyboardBuilder()
    if choice == 0:
        button_one = "¬∑ –ó–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã ¬∑"
        button_two = "  –ó–∞ –õ–∏–¥—ã  "
    else:
        button_one = "  –ó–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã  "
        button_two = "¬∑ –ó–∞ –õ–∏–¥—ã ¬∑"

    builder.button(text=f"{button_one}", callback_data=f"methode_views"),
    builder.button(text=f"{button_two}", callback_data=f"methode_leads"),
    builder.button(text="‚Äπ –ù–∞–∑–∞–¥", callback_data=f"profile"),
    builder.adjust(2)
    return builder.as_markup()

def confirm_checking():
    builder = InlineKeyboardBuilder()
    builder.button(text="üîç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data=f"check"),
    builder.button(text="‚Äπ –ù–∞–∑–∞–¥", callback_data=f"work"),
    builder.adjust(2)
    return builder.as_markup()

def cancel_key(param: str):
    builder = InlineKeyboardBuilder()
    builder.button(text="–û—Ç–º–µ–Ω–∞", callback_data=f"{param}"),
    builder.adjust(1)
    return builder.as_markup()


def back_key(param: str):
    builder = InlineKeyboardBuilder()
    builder.button(text="‚Äπ –ù–∞–∑–∞–¥", callback_data=f"{param}"),
    builder.adjust(1)
    return builder.as_markup()


def exit_key(param: str):
    builder = InlineKeyboardBuilder()
    builder.button(text="–í—ã–π—Ç–∏", callback_data=f"{param}"),
    builder.adjust(1)
    return builder.as_markup()
